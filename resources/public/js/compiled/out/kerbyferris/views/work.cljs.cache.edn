{:use-macros nil, :excludes #{}, :name kerbyferris.views.work, :imports nil, :requires {kerbyferris.helpers kerbyferris.helpers, state kerbyferris.state, kerbyferris.state kerbyferris.state}, :uses {update-open-headers! kerbyferris.helpers, is-open-header? kerbyferris.helpers, state kerbyferris.state}, :defs {exhibitions {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([]))}, :name kerbyferris.views.work/exhibitions, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, placements {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([]))}, :name kerbyferris.views.work/placements, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, projects {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 43, :column 7, :end-line 43, :end-column 15, :arglists (quote ([]))}, :name kerbyferris.views.work/projects, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, workshops {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 55, :column 7, :end-line 55, :end-column 16, :arglists (quote ([]))}, :name kerbyferris.views.work/workshops, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, education {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 62, :column 7, :end-line 62, :end-column 16, :arglists (quote ([]))}, :name kerbyferris.views.work/education, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, press {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 68, :column 7, :end-line 68, :end-column 12, :arglists (quote ([]))}, :name kerbyferris.views.work/press, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, work-data {:name kerbyferris.views.work/work-data, :file "src/kerbyferris/views/work.cljs", :line 95, :column 1, :end-line 95, :end-column 15, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 95, :column 6, :end-line 95, :end-column 15}}, work {:protocol-inline nil, :meta {:file "/home/kerby/dev/proj/kerbyferris.com/src/kerbyferris/views/work.cljs", :line 103, :column 7, :end-line 103, :end-column 11, :arglists (quote ([]))}, :name kerbyferris.views.work/work, :variadic false, :file "src/kerbyferris/views/work.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:li.indent :key :content :li :ul.top-bar :src :ul.connect :on-click :title :div#work :div :class :a.download :target :li.box :href :img :a :li.basic_box :span}, :order [:div :li :li.indent :a :href :target :title :content :div#work :a.download :span :img :src :ul.connect :li.basic_box :class :on-click :li.box :ul.top-bar :key]}, :doc nil}